s = [5, 2, 10, 8, 6]
        c
r = [0, 3, 0, 0, 0]
l = [0, 0, 0 ,0 ,0]


s = [ 2, 4, 8 , 4]
r = [ 3, 2,  0 , 0]
      c

     c,c+1,-------,...
     c--------------,...
   c-2,c-1,c

   r[c-1]=0
   a[c-2] | a[c-1] 


a[c] , a[c+1]
a[c] < a[c+1]
  a[c] = a[c+1]+1+x

2,8---->6--->4---->2    4  ,  6

if (gcd([L,R])) or (gcd([L,R]) == 1 and 1's ) then 
    gcd([L,R]) -> min([L,R])

freed[L,R] = gcd[L,R]==min[L,R] ? count(L,R,min[L,R]) : 0

min([L,R]) = min(min(L1,R1),min(L2,R2))


[1,3,3   1,1,3]
1        2

[2,2,2 1,1,3]
3       2


min 5 , min  5
                    LMin       RMin

gcd
min
count_min



gcd(C,gcd(A,B))=gcd(A,B,C)

2<=4<=4 ,2<=8

if a[c+1] % a[c] !=0 then 
    r[c] = 0
else then
    # guaranteed of condition a[c] <= a[c+1]
    if a[c] < a[c+1] then
        r[c] = r[c+1] + 1 + x
    elif a[c]==a[c+1] then
        r[c] = r[c+1] +1
    else:
        impossible



4,2,6,8
1   2


4,2,2,6,8
first 2: l=1 r = 3
second 2: l=2 r = 2

sieve =[0, 0, 2, 3, 2, 5, 2, 7, 2, 3, 2]
        0  1  2, 3 ,4, 5, 6, 7, 8, 9, 10

